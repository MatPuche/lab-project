{"version":3,"sources":["webpack:///../src/ol/format/WMSCapabilities.js","webpack:///./wms-capabilities.js"],"names":["NAMESPACE_URIS","PARSERS","node","objectStack","SERVICE_PARSERS","CAPABILITY_PARSERS","REQUEST_PARSERS","EXCEPTION_PARSERS","LAYER_PARSERS","super","this","version","undefined","readFromNode","getAttribute","trim","const","wmsCapabilityObject","readKeywordList","CONTACT_INFORMATION_PARSERS","CONTACT_PERSON_PARSERS","CONTACT_ADDRESS_PARSERS","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","extent","resolutions","ATTRIBUTION_PARSERS","authorityObject","readFormatOnlineresource","metadataObject","STYLE_PARSERS","parentLayerObject","length","layerObject","let","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","forEach","key","childValue","concat","parentValue","readSizedFormatOnlineresource","readOperationType","OPERATIONTYPE_PARSERS","DCPTYPE_PARSERS","HTTP_PARSERS","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","formatOnlineresource","size","parser","fetch","then","response","text","result","read","document","getElementById","innerText","JSON","stringify"],"mappings":"uIAyBMA,EAAiB,CAAC,KAAM,8BAOxBC,EAAU,YAAgBD,EAAgB,CAC9C,QAAW,aA0Ub,SAAqBE,EAAMC,GACzB,OAAO,YAAgB,GAAIC,EAAiBF,EAAMC,MA1UlD,WAAc,aAgUhB,SAAwBD,EAAMC,GAC5B,OAAO,YAAgB,GAAIE,EAAoBH,EAAMC,QAzTjDE,EAAqB,YAAgBL,EAAgB,CACzD,QAAW,aAgeb,SAAqBE,EAAMC,GACzB,OAAO,YAAgB,GAAIG,EAAiBJ,EAAMC,MAhelD,UAAa,aAmWf,SAAuBD,EAAMC,GAC3B,OAAO,YAAgB,GAAII,EAAmBL,EAAMC,MAnWpD,MAAS,aA2WX,SAA6BD,EAAMC,GACjC,OAAO,YAAgB,GAAIK,EAAeN,EAAMC,QAnW5C,EAA2B,YAC/B,aACEM,OAAM,MAKNC,KAAKC,aAAUC,E,8FAOjB,EAAF,UAAEC,aAAA,SAAaX,GACXQ,KAAKC,QAAUT,EAAKY,aAAa,WAAWC,OAC5CC,IAAMC,EAAsB,YAC1B,CACE,QAAWP,KAAKC,SAElBV,EACAC,EACA,IAEF,OAAOe,GAA4C,M,EAxBtB,CAAH,KAiCxBb,EAAkB,YAAgBJ,EAAgB,CACtD,KAAQ,YAAyB,KACjC,MAAS,YAAyB,KAClC,SAAY,YAAyB,KACrC,YAAe,YAAyBkB,GACxC,eAAkB,YAAyB,KAC3C,mBAAsB,aAuRxB,SAAgChB,EAAMC,GACpC,OAAO,YAAgB,GAAIgB,EAA6BjB,EAAMC,MAvR9D,KAAQ,YAAyB,KACjC,kBAAqB,YAAyB,KAC9C,WAAc,YAAyB,KACvC,SAAY,YAAyB,KACrC,UAAa,YAAyB,OAQlCgB,EAA8B,YAAgBnB,EAAgB,CAClE,qBAAwB,aAkR1B,SAAkCE,EAAMC,GACtC,OAAO,YAAgB,GAAIiB,EAAwBlB,EAAMC,MAlRzD,gBAAmB,YAAyB,KAC5C,eAAkB,aAyRpB,SAA4BD,EAAMC,GAChC,OAAO,YAAgB,GAAIkB,EAAyBnB,EAAMC,MAzR1D,sBAAyB,YAAyB,KAClD,0BAA6B,YAAyB,KACtD,6BAAgC,YAAyB,OAQrDiB,EAAyB,YAAgBpB,EAAgB,CAC7D,cAAiB,YAAyB,KAC1C,oBAAuB,YAAyB,OAQ5CqB,EAA0B,YAAgBrB,EAAgB,CAC9D,YAAe,YAAyB,KACxC,QAAW,YAAyB,KACpC,KAAQ,YAAyB,KACjC,gBAAmB,YAAyB,KAC5C,SAAY,YAAyB,KACrC,QAAW,YAAyB,OAQhCO,EAAoB,YAAgBP,EAAgB,CACxD,OAAU,YAAgB,OAQtBQ,EAAgB,YAAgBR,EAAgB,CACpD,KAAQ,YAAyB,KACjC,MAAS,YAAyB,KAClC,SAAY,YAAyB,KACrC,YAAe,YAAyBkB,GACxC,IAAO,YAAyB,KAChC,yBAA4B,aAwJ9B,SAAqChB,EAAMC,GACzCa,IAAMM,EAAwB,YAC5B,GACAC,EACArB,EACAC,GAEF,IAAKmB,EACH,OAEFN,IAAMQ,EAEHF,EAA2C,mBACxCG,EAEHH,EAA2C,mBACxCI,EAEHJ,EAA2C,mBACxCK,EAEHL,EAA2C,mBAC9C,QACyBV,IAAvBY,QACuBZ,IAAvBa,QACuBb,IAAvBc,QACuBd,IAAvBe,EAEA,OAEF,MAAO,CACLH,EACAC,EACAC,EACAC,MAvLF,YAAe,aA4HjB,SAAyBzB,EAAMC,GAC7Ba,IAAMY,EAAS,CACb,YAAkB1B,EAAKY,aAAa,SACpC,YAAkBZ,EAAKY,aAAa,SACpC,YAAkBZ,EAAKY,aAAa,SACpC,YAAkBZ,EAAKY,aAAa,UAGhCe,EAAc,CAClB,YAAkB3B,EAAKY,aAAa,SACpC,YAAkBZ,EAAKY,aAAa,UAGtC,MAAO,CACL,IAAOZ,EAAKY,aAAa,OACzB,OAAUc,EACV,IAAOC,MA3IT,UAAa,aA4Uf,SAAuB3B,EAAMC,GAW3B,MAVwB,CACtB,KAAQD,EAAKY,aAAa,QAC1B,MAASZ,EAAKY,aAAa,SAC3B,WAAcZ,EAAKY,aAAa,cAChC,QAAWZ,EAAKY,aAAa,WAC7B,eAAkB,YAAkBZ,EAAKY,aAAa,mBACtD,aAAgB,YAAkBZ,EAAKY,aAAa,iBACpD,QAAW,YAAkBZ,EAAKY,aAAa,YAC/C,OAAU,YAAWZ,OApVvB,YAAe,aAiHjB,SAAyBA,EAAMC,GAC7B,OAAO,YAAgB,GAAI2B,EAAqB5B,EAAMC,MAjHtD,aAAgB,aA4ZlB,SAA0BD,EAAMC,GAC9Ba,IAAMe,EAAkBC,EAAyB9B,EAAMC,GACvD,GAAI4B,EAEF,OADAA,EAAsB,KAAI7B,EAAKY,aAAa,QACrCiB,EAET,UAjaA,WAAc,YAAyB,KACvC,YAAe,aAwajB,SAAyB7B,EAAMC,GAC7Ba,IAAMiB,EAAiBD,EAAyB9B,EAAMC,GACtD,GAAI8B,EAEF,OADAA,EAAqB,KAAI/B,EAAKY,aAAa,QACpCmB,EAET,UA7aA,QAAW,YAAyBD,GACpC,eAAkB,YAAyBA,GAC3C,MAAS,aAmbX,SAAmB9B,EAAMC,GACvB,OAAO,YAAgB,GAAI+B,EAAehC,EAAMC,MAnbhD,oBAAuB,YAAyB,KAChD,oBAAuB,YAAyB,KAChD,MAAS,aAoPX,SAAmBD,EAAMC,GACvBa,IAAMmB,EAAuDhC,EAC3DA,EAAYiC,OAAS,GAGjBC,EAAc,YAAgB,GAAI7B,EAAeN,EAAMC,GAE7D,IAAKkC,EACH,OAEFC,IAAIC,EAAY,YAAkBrC,EAAKY,aAAa,mBAClCF,IAAd2B,IACFA,EAAYJ,EAA6B,WAE3CE,EAAuB,eAAkBzB,IAAd2B,GAA0BA,EAErDD,IAAIE,EAAW,YAA6BtC,EAAKY,aAAa,kBAC7CF,IAAb4B,IACFA,EAAWL,EAA4B,UAEzCE,EAAsB,SAAIG,EAE1BF,IAAIG,EAAS,YAAkBvC,EAAKY,aAAa,gBAClCF,IAAX6B,IACFA,EAASN,EAA0B,QAErCE,EAAoB,YAAezB,IAAX6B,GAAuBA,EAE/CH,IAAII,EAAY,YAAkBxC,EAAKY,aAAa,mBAClCF,IAAd8B,IACFA,EAAYP,EAA6B,WAE3CE,EAAuB,eAAkBzB,IAAd8B,GAA0BA,EAErDJ,IAAIK,EAAa,YAAkBzC,EAAKY,aAAa,eAChD6B,IACHA,EAAaR,EAA8B,YAE7CE,EAAwB,WAAIM,EAE5BL,IAAIM,EAAc,YAAkB1C,EAAKY,aAAa,gBACjD8B,IACHA,EAAcT,EAA+B,aAE/CE,EAAyB,YAAIO,EAGb,CAAC,QAAS,MAAO,gBACzBC,SAAQ,SAAUC,GACxB,GAAIA,KAAOX,EAAmB,CAC5BnB,IAAM+B,EAAaV,EAAYS,IAAQ,GACvCT,EAAYS,GAAOC,EAAWC,OAAOb,EAAkBW,QAmB3D,MAfoB,CAClB,2BACA,cACA,YACA,cACA,sBACA,uBAEUD,SAAQ,SAAUC,GAC5B,KAAMA,KAAOT,GAAc,CACzBrB,IAAMiC,EAAcd,EAAkBW,GACtCT,EAAYS,GAAOG,MAIhBZ,OAlTHP,EAAsB,YAAgB9B,EAAgB,CAC1D,MAAS,YAAyB,KAClC,eAAkB,YAAyB,KAC3C,QAAW,YAAyBkD,KAQhC3B,EAAqC,YAAgBvB,EAAgB,CACzE,mBAAsB,YAAyB,KAC/C,mBAAsB,YAAyB,KAC/C,mBAAsB,YAAyB,KAC/C,mBAAsB,YAAyB,OAQ3CM,EAAkB,YAAgBN,EAAgB,CACtD,gBAAmB,YAAyBmD,GAC5C,OAAU,YAAyBA,GACnC,eAAkB,YAAyBA,KAQvCC,EAAwB,YAAgBpD,EAAgB,CAC5D,OAAU,YAAyB,KACnC,QAAW,aA2Tb,SAAqBE,EAAMC,GACzB,OAAO,YAAgB,GAAIkD,EAAiBnD,EAAMC,QApT9CkD,EAAkB,YAAgBrD,EAAgB,CACtD,KAAQ,aA2TV,SAAkBE,EAAMC,GACtB,OAAO,YAAgB,GAAImD,EAAcpD,EAAMC,QApT3CmD,EAAe,YAAgBtD,EAAgB,CACnD,IAAO,YAAyBgC,GAChC,KAAQ,YAAyBA,KAQ7BE,EAAgB,YAAgBlC,EAAgB,CACpD,KAAQ,YAAyB,KACjC,MAAS,YAAyB,KAClC,SAAY,YAAyB,KACrC,UAAa,YAAyBkD,GACtC,cAAiB,YAAyBlB,GAC1C,SAAY,YAAyBA,KAQjCuB,EAAgC,YAAgBvD,EAAgB,CACpE,OAAU,YAAyB,KACnC,eAAkB,YAAyB,OAQvCwD,EAAsB,YAAgBxD,EAAgB,CAC1D,QAAW,YAAgB,OAqP7B,SAASgC,EAAyB9B,EAAMC,GACtC,OAAO,YAAgB,GAAIoD,EAA+BrD,EAAMC,GAmClE,SAASgD,EAAkBjD,EAAMC,GAC/B,OAAO,YAAgB,GAAIiD,EAAuBlD,EAAMC,GAQ1D,SAAS+C,EAA8BhD,EAAMC,GAC3Ca,IAAMyC,EAAuBzB,EAAyB9B,EAAMC,GAC5D,GAAIsD,EAAsB,CACxBzC,IAAM0C,EAAO,CACX,YAA6BxD,EAAKY,aAAa,UAC/C,YAA6BZ,EAAKY,aAAa,YAGjD,OADA2C,EAA2B,KAAIC,EACxBD,GA+CX,SAASvC,EAAgBhB,EAAMC,GAC7B,OAAO,YAAgB,GAAIqD,EAAqBtD,EAAMC,GAGzC,ICxmBTwD,EAAS,IDwmBA,ECtmBfC,MAAM,sBACHC,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBF,MAAK,SAAUE,GACd/C,IAAMgD,EAASL,EAAOM,KAAKF,GAC3BG,SAASC,eAAe,OAAOC,UAAYC,KAAKC,UAAUN,EAAQ,KAAM,Q","file":"wms-capabilities.js","sourcesContent":["/**\n * @module ol/format/WMSCapabilities\n */\nimport XML from './XML.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {\n  readBooleanString,\n  readDecimal,\n  readDecimalString,\n  readNonNegativeInteger,\n  readNonNegativeIntegerString,\n  readString,\n} from './xsd.js';\nimport {readHref} from './XLink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wms'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Service': makeObjectPropertySetter(readService),\n  'Capability': makeObjectPropertySetter(readCapability),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Request': makeObjectPropertySetter(readRequest),\n  'Exception': makeObjectPropertySetter(readException),\n  'Layer': makeObjectPropertySetter(readCapabilityLayer),\n});\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nclass WMSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wmsCapabilityObject = pushParseAndPop(\n      {\n        'version': this.version,\n      },\n      PARSERS,\n      node,\n      []\n    );\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'ContactInformation': makeObjectPropertySetter(readContactInformation),\n  'Fees': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n  'ContactPosition': makeObjectPropertySetter(readString),\n  'ContactAddress': makeObjectPropertySetter(readContactAddress),\n  'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n  'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n  'ContactElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPerson': makeObjectPropertySetter(readString),\n  'ContactOrganization': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AddressType': makeObjectPropertySetter(readString),\n  'Address': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'StateOrProvince': makeObjectPropertySetter(readString),\n  'PostCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeArrayPusher(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'CRS': makeObjectPropertyPusher(readString),\n  'EX_GeographicBoundingBox': makeObjectPropertySetter(\n    readEXGeographicBoundingBox\n  ),\n  'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n  'Dimension': makeObjectPropertyPusher(readDimension),\n  'Attribution': makeObjectPropertySetter(readAttribution),\n  'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n  'Identifier': makeObjectPropertyPusher(readString),\n  'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n  'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'Style': makeObjectPropertyPusher(readStyle),\n  'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'Layer': makeObjectPropertyPusher(readLayer),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n  'northBoundLatitude': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'GetCapabilities': makeObjectPropertySetter(readOperationType),\n  'GetMap': makeObjectPropertySetter(readOperationType),\n  'GetFeatureInfo': makeObjectPropertySetter(readOperationType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertyPusher(readString),\n  'DCPType': makeObjectPropertyPusher(readDCPType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHTTP),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertySetter(readFormatOnlineresource),\n  'Post': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n  'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n  'StyleURL': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Keyword': makeArrayPusher(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy')),\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy')),\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions,\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['northBoundLatitude']);\n  if (\n    westBoundLongitude === undefined ||\n    southBoundLatitude === undefined ||\n    eastBoundLongitude === undefined ||\n    northBoundLatitude === undefined\n  ) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude,\n    southBoundLatitude,\n    eastBoundLongitude,\n    northBoundLatitude,\n  ];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[\n    objectStack.length - 1\n  ]);\n\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function (key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = [\n    'EX_GeographicBoundingBox',\n    'BoundingBox',\n    'Dimension',\n    'Attribution',\n    'MinScaleDenominator',\n    'MaxScaleDenominator',\n  ];\n  replaceKeys.forEach(function (key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node),\n  };\n  return dimensionObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height')),\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\nexport default WMSCapabilities;\n","import WMSCapabilities from '../src/ol/format/WMSCapabilities.js';\n\nconst parser = new WMSCapabilities();\n\nfetch('data/ogcsample.xml')\n  .then(function (response) {\n    return response.text();\n  })\n  .then(function (text) {\n    const result = parser.read(text);\n    document.getElementById('log').innerText = JSON.stringify(result, null, 2);\n  });\n"],"sourceRoot":""}